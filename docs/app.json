[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny import reactive\nfrom shiny.express import input, render, ui\nfrom shinywidgets import render_plotly\nfrom palmerpenguins import load_penguins\nimport seaborn as sns\n\n# Load penguins dataset\npenguins_df = load_penguins()\n\n# Set up the UI page options\nui.page_opts(title=\"Palmer Penguin Data with Dgraves4\", fillable=True)\n\n# Create the sidebar for user interaction\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n    # Dropdown to select attribute\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"Select Attribute\",\n        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n    )\n    # Numeric input for Plotly histogram bins\n    ui.input_numeric(\"plotly_bin_count\", \"Plotly Bin Count\", 30)\n    # Slider for Seaborn histogram bins\n    ui.input_slider(\n        \"seaborn_bin_count\",\n        \"Seaborn Bin Count\",\n        1,\n        100,\n        30,\n    )\n    # Checkbox group for selecting species\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Select Species\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\"],\n        inline=True,\n    )\n    # Horizontal rule\n    ui.hr()\n    # Link to GitHub repo\n    ui.a(\n        \"Dgraves4 on GitHub\",\n        href=\"https://github.com/dgraves4/cintel-02-data\",\n        target=\"_blank\",\n    )\n\n# Layout columns for organizing content\nwith ui.layout_columns():\n    # Data Table card\n    with ui.card():\n        ui.card_header(\"Data Table\")\n\n        @render.data_frame\n        def penguin_datatable():\n            return render.DataTable(penguins_df)\n\n    # Data Grid card\n    with ui.card():\n        ui.card_header(\"Data Grid\")\n\n        @render.data_frame\n        def penguin_datagrid():\n            return render.DataGrid(penguins_df)\n\n\n# Add a reactive calculation to filter the data\n@reactive.calc\ndef filtered_data():\n    return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list())]\n\n\n# Update chart generation functions to use filtered data\n\n# Layout columns for visualizations\nwith ui.layout_columns():\n    # Tabbed tabset card for plots\n    with ui.navset_card_tab(id=\"plot_tabs\"):\n        # Plotly Histogram tab\n        with ui.nav_panel(\"Plotly Histogram\"):\n\n            @render_plotly\n            def plotly_histogram():\n                plotly_hist = px.histogram(\n                    data_frame=filtered_data(),\n                    x=input.selected_attribute(),\n                    nbins=input.plotly_bin_count(),\n                    color=\"species\",\n                ).update_layout(\n                    title=\"Plotly Penguins Data by Attribute\",\n                    xaxis_title=\"Selected Attribute\",\n                    yaxis_title=\"Count\",\n                )\n                return plotly_hist\n\n        # Seaborn Histogram tab\n        with ui.nav_panel(\"Seaborn Histogram\"):\n\n            @render.plot\n            def seaborn_histogram():\n                seaborn_hist = sns.histplot(\n                    data=filtered_data(),\n                    x=input.selected_attribute(),\n                    bins=input.seaborn_bin_count(),\n                )\n                seaborn_hist.set_title(\"Seaborn Penguin Data by Attribute\")\n                seaborn_hist.set_xlabel(\"Selected Attribute\")\n                seaborn_hist.set_ylabel(\"Count\")\n\n        # Plotly Scatterplot tab\n        with ui.nav_panel(\"Plotly Scatterplot\"):\n\n            @render_plotly\n            def plotly_scatterplot():\n                plotly_scatter = px.scatter(\n                    filtered_data(),\n                    x=\"bill_length_mm\",\n                    y=\"bill_depth_mm\",\n                    color=\"species\",\n                    size_max=8,\n                    title=\"Plotly Scatterplot: Bill Depth and Length\",\n                    labels={\n                        \"bill_depth_mm\": \"Bill Depth (mm)\",\n                        \"bill_length_mm\": \"Bill Length(mm)\",\n                    },\n                )\n                return plotly_scatter\n\n        # Grouped Bar Plot tab\n        with ui.nav_panel(\"Grouped Bar Plot\"):\n\n            @render_plotly\n            def grouped_bar_plot():\n                grouped_bar = px.bar(\n                    filtered_data(),\n                    x=\"island\",\n                    y=\"bill_length_mm\",\n                    color=\"species\",\n                    barmode=\"group\",\n                    title=\"Average Bill Length by Island\",\n                    labels={\"bill_length_mm\": \"Average Bill Length (mm)\"},\n                )\n                return grouped_bar\n", "type": "text"}]